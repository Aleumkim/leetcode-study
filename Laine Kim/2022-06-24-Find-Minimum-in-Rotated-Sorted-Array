Find the minimum value in the rotated sorted array with O(logN)-> Use the binary search

class Solution {
    public int findMin(int[] nums) {
        int n = nums.length;
        int left = 0, right = n - 1, answer = Integer.MAX_VALUE;

        while(left <= right) {          // can handle when n = 1
            int mid = left + (right - left) / 2;

            if (nums[mid] <= answer) {
                answer = nums[mid];
            }

            if (nums[mid] > nums[right]) { // there's min at the right part
                left = mid + 1;
            } else {                       // there's min at the left part
                right = mid - 1;
            }
        }
        return answer;
    }
}

O(N) way
- just iterate the array and if the element is smaller than the prev/next both, it's the answer